-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Parser.y
-----------------------------------------------------------------------------

state 64 contains 5 reduce/reduce conflicts.
state 79 contains 1 reduce/reduce conflicts.
state 156 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseExpr -> Code                           (0)
	Code -> Single                                     (1)
	Code -> Single Code                                (2)
	Single -> Include                                  (3)
	Single -> Function                                 (4)
	Single -> Variable                                 (5)
	Include -> INCLUDE QUOTES IDEN QUOTES              (6)
	Include -> INCLUDE LT IDEN GT                      (7)
	Variable -> Type Name SEMI                         (8)
	Variable -> Type Name AS Assig SEMI                (9)
	Type -> IDEN                                       (10)
	Name -> IDEN                                       (11)
	Function -> Type Name Args Block                   (12)
	Args -> LEFTP RIGHTP                               (13)
	Args -> LEFTP Type Name RIGHTP                     (14)
	Args -> LEFTP Type Name COMMA MoreArgs RIGHTP      (15)
	MoreArgs -> Type Name                              (16)
	MoreArgs -> Type Name COMMA MoreArgs               (17)
	Block -> LPAR Internal RPAR                        (18)
	Block -> LPAR RPAR                                 (19)
	Internal -> CodeLine                               (20)
	Internal -> CodeLine Internal                      (21)
	CodeLine -> Term                                   (22)
	CodeLine -> For                                    (23)
	CodeLine -> While                                  (24)
	CodeLine -> If                                     (25)
	CodeLine -> Variable                               (26)
	CodeLine -> Block                                  (27)
	CodeLine -> Return                                 (28)
	Return -> RETURN Term                              (29)
	If -> IF LEFTP Assig RIGHTP Block                  (30)
	If -> IF LEFTP Assig RIGHTP Block ELSE Block       (31)
	For -> FOR LEFTP Type Term Term RIGHTP Block       (32)
	For -> FOR LEFTP Type Term Term Assig RIGHTP Block   (33)
	For -> FOR LEFTP Term Term RIGHTP Block            (34)
	For -> FOR LEFTP Term Term Assig RIGHTP Block      (35)
	For -> FOR LEFTP Name COLON Name RIGHTP Block      (36)
	For -> FOR LEFTP Type Name COLON Name RIGHTP Block   (37)
	While -> WHILE LEFTP Assig RIGHTP Block            (38)
	Term -> SEMI                                       (39)
	Term -> Assig SEMI                                 (40)
	Assig -> Name AssigOp Assig                        (41)
	Assig -> Expr14                                    (42)
	AssigOp -> PLUSEQ                                  (43)
	AssigOp -> SUBEQ                                   (44)
	AssigOp -> MULEQ                                   (45)
	AssigOp -> DIVEQ                                   (46)
	AssigOp -> EUCDIVEQ                                (47)
	AssigOp -> LSHIFTEQ                                (48)
	AssigOp -> RSHIFTEQ                                (49)
	AssigOp -> OREQ                                    (50)
	AssigOp -> ANDEQ                                   (51)
	AssigOp -> XOREQ                                   (52)
	AssigOp -> AS                                      (53)
	Expr14 -> Expr13 OROR Expr14                       (54)
	Expr14 -> Expr13                                   (55)
	Expr13 -> Expr12 ANDAND Expr13                     (56)
	Expr13 -> Expr12                                   (57)
	Expr12 -> Expr11 OR Expr12                         (58)
	Expr12 -> Expr11                                   (59)
	Expr11 -> Expr10 XOR Expr11                        (60)
	Expr11 -> Expr10                                   (61)
	Expr10 -> Expr9 AND Expr10                         (62)
	Expr10 -> Expr9                                    (63)
	Expr9 -> Expr8 Op9 Expr9                           (64)
	Expr9 -> Expr8                                     (65)
	Op9 -> EQ                                          (66)
	Op9 -> NOTEQ                                       (67)
	Expr8 -> Expr7 Op8 Expr8                           (68)
	Expr8 -> Expr7                                     (69)
	Op8 -> LT                                          (70)
	Op8 -> GT                                          (71)
	Op8 -> LTE                                         (72)
	Op8 -> GTE                                         (73)
	Expr7 -> Expr6 Op7 Expr7                           (74)
	Expr7 -> Expr6                                     (75)
	Op7 -> RSHIFT                                      (76)
	Op7 -> LSHIFT                                      (77)
	Expr6 -> Expr5 Op6 Expr6                           (78)
	Expr6 -> Expr5                                     (79)
	Op6 -> PLUS                                        (80)
	Op6 -> MINUS                                       (81)
	Expr5 -> Expr3 Op5 Expr5                           (82)
	Expr5 -> Expr3                                     (83)
	Op5 -> MUL                                         (84)
	Op5 -> DIV                                         (85)
	Op5 -> EUCDIV                                      (86)
	Expr3 -> PP Atom                                   (87)
	Expr3 -> MM Atom                                   (88)
	Expr3 -> PLUS Expr3                                (89)
	Expr3 -> MINUS Expr3                               (90)
	Expr3 -> NOT Expr3                                 (91)
	Expr3 -> INV Expr3                                 (92)
	Expr3 -> Atom PP                                   (93)
	Expr3 -> Atom MM                                   (94)
	Expr3 -> AtomExt                                   (95)
	Atom -> Name                                       (96)
	Atom -> LEFTP Name AssigOp Assig RIGHTP            (97)
	Atom -> LEFTP Atom RIGHTP                          (98)
	AtomExt -> Name                                    (99)
	AtomExt -> TRUE                                    (100)
	AtomExt -> FALSE                                   (101)
	AtomExt -> NUMBER                                  (102)
	AtomExt -> LEFTP Assig RIGHTP                      (103)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	NUMBER         { Number $$ }
	IDEN           { Identifier $$ }
	MINUS          { MinusT }
	PLUS           { PlusT }
	LEFTP          { LeftP }
	MUL            { MulT }
	RIGHTP         { RightP }
	DIV            { DivT }
	EUCDIV         { EucDivT }
	PLUSEQ         { PlusEqT }
	SUBEQ          { SubEqT }
	MULEQ          { MulEqT }
	DIVEQ          { DivEqT }
	EUCDIVEQ       { EucDivEqT }
	RSHIFTEQ       { RShiftEqT }
	LSHIFTEQ       { LShiftEqT }
	ANDEQ          { AndEqT }
	OREQ           { OrEqT }
	XOREQ          { XorEqT }
	PP             { PPT }
	MM             { MMT }
	INV            { InvT }
	OR             { OrT }
	AND            { AndT }
	RSHIFT         { RShiftT }
	LSHIFT         { LShiftT }
	NOT            { NotT }
	ANDAND         { AndAndT }
	OROR           { OrOrT }
	EQ             { EqT }
	NOTEQ          { NotEqT }
	GT             { GTT }
	LT             { LTT }
	GTE            { GTET }
	LTE            { LTET }
	TRUE           { TrueT }
	FALSE          { FalseT }
	FOR            { ForT }
	IF             { IfT }
	WHILE          { WhileT }
	ELSE           { ElseT }
	RETURN         { ReturnT }
	SEMI           { SemiT }
	COMMA          { CommaT }
	INCLUDE        { IncludeT }
	AS             { AsT }
	LPAR           { LParT }
	RPAR           { RParT }
	QUOTES         { QuotesT }
	COLON          { ColonT }
	XOR            { XorT }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseExpr rule  0
	Code            rules 1, 2
	Single          rules 3, 4, 5
	Include         rules 6, 7
	Variable        rules 8, 9
	Type            rule  10
	Name            rule  11
	Function        rule  12
	Args            rules 13, 14, 15
	MoreArgs        rules 16, 17
	Block           rules 18, 19
	Internal        rules 20, 21
	CodeLine        rules 22, 23, 24, 25, 26, 27, 28
	Return          rule  29
	If              rules 30, 31
	For             rules 32, 33, 34, 35, 36, 37
	While           rule  38
	Term            rules 39, 40
	Assig           rules 41, 42
	AssigOp         rules 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
	Expr14          rules 54, 55
	Expr13          rules 56, 57
	Expr12          rules 58, 59
	Expr11          rules 60, 61
	Expr10          rules 62, 63
	Expr9           rules 64, 65
	Op9             rules 66, 67
	Expr8           rules 68, 69
	Op8             rules 70, 71, 72, 73
	Expr7           rules 74, 75
	Op7             rules 76, 77
	Expr6           rules 78, 79
	Op6             rules 80, 81
	Expr5           rules 82, 83
	Op5             rules 84, 85, 86
	Expr3           rules 87, 88, 89, 90, 91, 92, 93, 94, 95
	Atom            rules 96, 97, 98
	AtomExt         rules 99, 100, 101, 102, 103

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	IDEN           shift, and enter state 7
	INCLUDE        shift, and enter state 8

	Code           goto state 9
	Single         goto state 10
	Include        goto state 3
	Variable       goto state 4
	Type           goto state 5
	Function       goto state 6

State 1


	IDEN           shift, and enter state 7
	INCLUDE        shift, and enter state 8

	Single         goto state 2
	Include        goto state 3
	Variable       goto state 4
	Type           goto state 5
	Function       goto state 6

State 2

	Code -> Single .                                    (rule 1)



State 3

	Single -> Include .                                 (rule 3)

	IDEN           reduce using rule 3
	INCLUDE        reduce using rule 3
	%eof           reduce using rule 3


State 4

	Single -> Variable .                                (rule 5)

	IDEN           reduce using rule 5
	INCLUDE        reduce using rule 5
	%eof           reduce using rule 5


State 5

	Variable -> Type . Name SEMI                        (rule 8)
	Variable -> Type . Name AS Assig SEMI               (rule 9)
	Function -> Type . Name Args Block                  (rule 12)

	IDEN           shift, and enter state 15

	Name           goto state 14

State 6

	Single -> Function .                                (rule 4)

	IDEN           reduce using rule 4
	INCLUDE        reduce using rule 4
	%eof           reduce using rule 4


State 7

	Type -> IDEN .                                      (rule 10)

	IDEN           reduce using rule 10


State 8

	Include -> INCLUDE . QUOTES IDEN QUOTES             (rule 6)
	Include -> INCLUDE . LT IDEN GT                     (rule 7)

	LT             shift, and enter state 12
	QUOTES         shift, and enter state 13


State 9

	%start_parseExpr -> Code .                          (rule 0)

	%eof           accept


State 10

	Code -> Single .                                    (rule 1)
	Code -> Single . Code                               (rule 2)

	IDEN           shift, and enter state 7
	INCLUDE        shift, and enter state 8
	%eof           reduce using rule 1

	Code           goto state 11
	Single         goto state 10
	Include        goto state 3
	Variable       goto state 4
	Type           goto state 5
	Function       goto state 6

State 11

	Code -> Single Code .                               (rule 2)

	%eof           reduce using rule 2


State 12

	Include -> INCLUDE LT . IDEN GT                     (rule 7)

	IDEN           shift, and enter state 21


State 13

	Include -> INCLUDE QUOTES . IDEN QUOTES             (rule 6)

	IDEN           shift, and enter state 20


State 14

	Variable -> Type Name . SEMI                        (rule 8)
	Variable -> Type Name . AS Assig SEMI               (rule 9)
	Function -> Type Name . Args Block                  (rule 12)

	LEFTP          shift, and enter state 17
	SEMI           shift, and enter state 18
	AS             shift, and enter state 19

	Args           goto state 16

State 15

	Name -> IDEN .                                      (rule 11)

	MINUS          reduce using rule 11
	PLUS           reduce using rule 11
	LEFTP          reduce using rule 11
	MUL            reduce using rule 11
	RIGHTP         reduce using rule 11
	DIV            reduce using rule 11
	EUCDIV         reduce using rule 11
	PLUSEQ         reduce using rule 11
	SUBEQ          reduce using rule 11
	MULEQ          reduce using rule 11
	DIVEQ          reduce using rule 11
	EUCDIVEQ       reduce using rule 11
	RSHIFTEQ       reduce using rule 11
	LSHIFTEQ       reduce using rule 11
	ANDEQ          reduce using rule 11
	OREQ           reduce using rule 11
	XOREQ          reduce using rule 11
	PP             reduce using rule 11
	MM             reduce using rule 11
	OR             reduce using rule 11
	AND            reduce using rule 11
	RSHIFT         reduce using rule 11
	LSHIFT         reduce using rule 11
	ANDAND         reduce using rule 11
	OROR           reduce using rule 11
	EQ             reduce using rule 11
	NOTEQ          reduce using rule 11
	GT             reduce using rule 11
	LT             reduce using rule 11
	GTE            reduce using rule 11
	LTE            reduce using rule 11
	SEMI           reduce using rule 11
	COMMA          reduce using rule 11
	AS             reduce using rule 11
	COLON          reduce using rule 11
	XOR            reduce using rule 11


State 16

	Function -> Type Name Args . Block                  (rule 12)

	LPAR           shift, and enter state 52

	Block          goto state 51

State 17

	Args -> LEFTP . RIGHTP                              (rule 13)
	Args -> LEFTP . Type Name RIGHTP                    (rule 14)
	Args -> LEFTP . Type Name COMMA MoreArgs RIGHTP     (rule 15)

	IDEN           shift, and enter state 7
	RIGHTP         shift, and enter state 50

	Type           goto state 49

State 18

	Variable -> Type Name SEMI .                        (rule 8)

	NUMBER         reduce using rule 8
	IDEN           reduce using rule 8
	MINUS          reduce using rule 8
	PLUS           reduce using rule 8
	LEFTP          reduce using rule 8
	PP             reduce using rule 8
	MM             reduce using rule 8
	INV            reduce using rule 8
	NOT            reduce using rule 8
	TRUE           reduce using rule 8
	FALSE          reduce using rule 8
	FOR            reduce using rule 8
	IF             reduce using rule 8
	WHILE          reduce using rule 8
	RETURN         reduce using rule 8
	SEMI           reduce using rule 8
	INCLUDE        reduce using rule 8
	LPAR           reduce using rule 8
	RPAR           reduce using rule 8
	%eof           reduce using rule 8


State 19

	Variable -> Type Name AS . Assig SEMI               (rule 9)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 25
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 20

	Include -> INCLUDE QUOTES IDEN . QUOTES             (rule 6)

	QUOTES         shift, and enter state 23


State 21

	Include -> INCLUDE LT IDEN . GT                     (rule 7)

	GT             shift, and enter state 22


State 22

	Include -> INCLUDE LT IDEN GT .                     (rule 7)

	IDEN           reduce using rule 7
	INCLUDE        reduce using rule 7
	%eof           reduce using rule 7


State 23

	Include -> INCLUDE QUOTES IDEN QUOTES .             (rule 6)

	IDEN           reduce using rule 6
	INCLUDE        reduce using rule 6
	%eof           reduce using rule 6


State 24

	Assig -> Name . AssigOp Assig                       (rule 41)
	Atom -> Name .                                      (rule 96)
	AtomExt -> Name .                                   (rule 99)

	MINUS          reduce using rule 99
	PLUS           reduce using rule 99
	MUL            reduce using rule 99
	RIGHTP         reduce using rule 99
	DIV            reduce using rule 99
	EUCDIV         reduce using rule 99
	PLUSEQ         shift, and enter state 111
	SUBEQ          shift, and enter state 112
	MULEQ          shift, and enter state 113
	DIVEQ          shift, and enter state 114
	EUCDIVEQ       shift, and enter state 115
	RSHIFTEQ       shift, and enter state 116
	LSHIFTEQ       shift, and enter state 117
	ANDEQ          shift, and enter state 118
	OREQ           shift, and enter state 119
	XOREQ          shift, and enter state 120
	PP             reduce using rule 96
	MM             reduce using rule 96
	OR             reduce using rule 99
	AND            reduce using rule 99
	RSHIFT         reduce using rule 99
	LSHIFT         reduce using rule 99
	ANDAND         reduce using rule 99
	OROR           reduce using rule 99
	EQ             reduce using rule 99
	NOTEQ          reduce using rule 99
	GT             reduce using rule 99
	LT             reduce using rule 99
	GTE            reduce using rule 99
	LTE            reduce using rule 99
	SEMI           reduce using rule 99
	AS             shift, and enter state 121
	XOR            reduce using rule 99

	AssigOp        goto state 110

State 25

	Variable -> Type Name AS Assig . SEMI               (rule 9)

	SEMI           shift, and enter state 109


State 26

	Assig -> Expr14 .                                   (rule 42)

	RIGHTP         reduce using rule 42
	SEMI           reduce using rule 42


State 27

	Expr14 -> Expr13 . OROR Expr14                      (rule 54)
	Expr14 -> Expr13 .                                  (rule 55)

	RIGHTP         reduce using rule 55
	OROR           shift, and enter state 108
	SEMI           reduce using rule 55


State 28

	Expr13 -> Expr12 . ANDAND Expr13                    (rule 56)
	Expr13 -> Expr12 .                                  (rule 57)

	RIGHTP         reduce using rule 57
	ANDAND         shift, and enter state 107
	OROR           reduce using rule 57
	SEMI           reduce using rule 57


State 29

	Expr12 -> Expr11 . OR Expr12                        (rule 58)
	Expr12 -> Expr11 .                                  (rule 59)

	RIGHTP         reduce using rule 59
	OR             shift, and enter state 106
	ANDAND         reduce using rule 59
	OROR           reduce using rule 59
	SEMI           reduce using rule 59


State 30

	Expr11 -> Expr10 . XOR Expr11                       (rule 60)
	Expr11 -> Expr10 .                                  (rule 61)

	RIGHTP         reduce using rule 61
	OR             reduce using rule 61
	ANDAND         reduce using rule 61
	OROR           reduce using rule 61
	SEMI           reduce using rule 61
	XOR            shift, and enter state 105


State 31

	Expr10 -> Expr9 . AND Expr10                        (rule 62)
	Expr10 -> Expr9 .                                   (rule 63)

	RIGHTP         reduce using rule 63
	OR             reduce using rule 63
	AND            shift, and enter state 104
	ANDAND         reduce using rule 63
	OROR           reduce using rule 63
	SEMI           reduce using rule 63
	XOR            reduce using rule 63


State 32

	Expr9 -> Expr8 . Op9 Expr9                          (rule 64)
	Expr9 -> Expr8 .                                    (rule 65)

	RIGHTP         reduce using rule 65
	OR             reduce using rule 65
	AND            reduce using rule 65
	ANDAND         reduce using rule 65
	OROR           reduce using rule 65
	EQ             shift, and enter state 102
	NOTEQ          shift, and enter state 103
	SEMI           reduce using rule 65
	XOR            reduce using rule 65

	Op9            goto state 101

State 33

	Expr8 -> Expr7 . Op8 Expr8                          (rule 68)
	Expr8 -> Expr7 .                                    (rule 69)

	RIGHTP         reduce using rule 69
	OR             reduce using rule 69
	AND            reduce using rule 69
	ANDAND         reduce using rule 69
	OROR           reduce using rule 69
	EQ             reduce using rule 69
	NOTEQ          reduce using rule 69
	GT             shift, and enter state 97
	LT             shift, and enter state 98
	GTE            shift, and enter state 99
	LTE            shift, and enter state 100
	SEMI           reduce using rule 69
	XOR            reduce using rule 69

	Op8            goto state 96

State 34

	Expr7 -> Expr6 . Op7 Expr7                          (rule 74)
	Expr7 -> Expr6 .                                    (rule 75)

	RIGHTP         reduce using rule 75
	OR             reduce using rule 75
	AND            reduce using rule 75
	RSHIFT         shift, and enter state 94
	LSHIFT         shift, and enter state 95
	ANDAND         reduce using rule 75
	OROR           reduce using rule 75
	EQ             reduce using rule 75
	NOTEQ          reduce using rule 75
	GT             reduce using rule 75
	LT             reduce using rule 75
	GTE            reduce using rule 75
	LTE            reduce using rule 75
	SEMI           reduce using rule 75
	XOR            reduce using rule 75

	Op7            goto state 93

State 35

	Expr6 -> Expr5 . Op6 Expr6                          (rule 78)
	Expr6 -> Expr5 .                                    (rule 79)

	MINUS          shift, and enter state 91
	PLUS           shift, and enter state 92
	RIGHTP         reduce using rule 79
	OR             reduce using rule 79
	AND            reduce using rule 79
	RSHIFT         reduce using rule 79
	LSHIFT         reduce using rule 79
	ANDAND         reduce using rule 79
	OROR           reduce using rule 79
	EQ             reduce using rule 79
	NOTEQ          reduce using rule 79
	GT             reduce using rule 79
	LT             reduce using rule 79
	GTE            reduce using rule 79
	LTE            reduce using rule 79
	SEMI           reduce using rule 79
	XOR            reduce using rule 79

	Op6            goto state 90

State 36

	Expr5 -> Expr3 . Op5 Expr5                          (rule 82)
	Expr5 -> Expr3 .                                    (rule 83)

	MINUS          reduce using rule 83
	PLUS           reduce using rule 83
	MUL            shift, and enter state 87
	RIGHTP         reduce using rule 83
	DIV            shift, and enter state 88
	EUCDIV         shift, and enter state 89
	OR             reduce using rule 83
	AND            reduce using rule 83
	RSHIFT         reduce using rule 83
	LSHIFT         reduce using rule 83
	ANDAND         reduce using rule 83
	OROR           reduce using rule 83
	EQ             reduce using rule 83
	NOTEQ          reduce using rule 83
	GT             reduce using rule 83
	LT             reduce using rule 83
	GTE            reduce using rule 83
	LTE            reduce using rule 83
	SEMI           reduce using rule 83
	XOR            reduce using rule 83

	Op5            goto state 86

State 37

	Expr3 -> Atom . PP                                  (rule 93)
	Expr3 -> Atom . MM                                  (rule 94)

	PP             shift, and enter state 84
	MM             shift, and enter state 85


State 38

	Expr3 -> AtomExt .                                  (rule 95)

	MINUS          reduce using rule 95
	PLUS           reduce using rule 95
	MUL            reduce using rule 95
	RIGHTP         reduce using rule 95
	DIV            reduce using rule 95
	EUCDIV         reduce using rule 95
	OR             reduce using rule 95
	AND            reduce using rule 95
	RSHIFT         reduce using rule 95
	LSHIFT         reduce using rule 95
	ANDAND         reduce using rule 95
	OROR           reduce using rule 95
	EQ             reduce using rule 95
	NOTEQ          reduce using rule 95
	GT             reduce using rule 95
	LT             reduce using rule 95
	GTE            reduce using rule 95
	LTE            reduce using rule 95
	SEMI           reduce using rule 95
	XOR            reduce using rule 95


State 39

	AtomExt -> NUMBER .                                 (rule 102)

	MINUS          reduce using rule 102
	PLUS           reduce using rule 102
	MUL            reduce using rule 102
	RIGHTP         reduce using rule 102
	DIV            reduce using rule 102
	EUCDIV         reduce using rule 102
	OR             reduce using rule 102
	AND            reduce using rule 102
	RSHIFT         reduce using rule 102
	LSHIFT         reduce using rule 102
	ANDAND         reduce using rule 102
	OROR           reduce using rule 102
	EQ             reduce using rule 102
	NOTEQ          reduce using rule 102
	GT             reduce using rule 102
	LT             reduce using rule 102
	GTE            reduce using rule 102
	LTE            reduce using rule 102
	SEMI           reduce using rule 102
	XOR            reduce using rule 102


State 40

	Expr3 -> MINUS . Expr3                              (rule 90)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr3          goto state 83
	Atom           goto state 37
	AtomExt        goto state 38

State 41

	Expr3 -> PLUS . Expr3                               (rule 89)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr3          goto state 82
	Atom           goto state 37
	AtomExt        goto state 38

State 42

	Atom -> LEFTP . Name AssigOp Assig RIGHTP           (rule 97)
	Atom -> LEFTP . Atom RIGHTP                         (rule 98)
	AtomExt -> LEFTP . Assig RIGHTP                     (rule 103)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 79
	Assig          goto state 80
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 81
	AtomExt        goto state 38

State 43

	Expr3 -> PP . Atom                                  (rule 87)

	IDEN           shift, and enter state 15
	LEFTP          shift, and enter state 77

	Name           goto state 75
	Atom           goto state 78

State 44

	Expr3 -> MM . Atom                                  (rule 88)

	IDEN           shift, and enter state 15
	LEFTP          shift, and enter state 77

	Name           goto state 75
	Atom           goto state 76

State 45

	Expr3 -> INV . Expr3                                (rule 92)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr3          goto state 74
	Atom           goto state 37
	AtomExt        goto state 38

State 46

	Expr3 -> NOT . Expr3                                (rule 91)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr3          goto state 73
	Atom           goto state 37
	AtomExt        goto state 38

State 47

	AtomExt -> TRUE .                                   (rule 100)

	MINUS          reduce using rule 100
	PLUS           reduce using rule 100
	MUL            reduce using rule 100
	RIGHTP         reduce using rule 100
	DIV            reduce using rule 100
	EUCDIV         reduce using rule 100
	OR             reduce using rule 100
	AND            reduce using rule 100
	RSHIFT         reduce using rule 100
	LSHIFT         reduce using rule 100
	ANDAND         reduce using rule 100
	OROR           reduce using rule 100
	EQ             reduce using rule 100
	NOTEQ          reduce using rule 100
	GT             reduce using rule 100
	LT             reduce using rule 100
	GTE            reduce using rule 100
	LTE            reduce using rule 100
	SEMI           reduce using rule 100
	XOR            reduce using rule 100


State 48

	AtomExt -> FALSE .                                  (rule 101)

	MINUS          reduce using rule 101
	PLUS           reduce using rule 101
	MUL            reduce using rule 101
	RIGHTP         reduce using rule 101
	DIV            reduce using rule 101
	EUCDIV         reduce using rule 101
	OR             reduce using rule 101
	AND            reduce using rule 101
	RSHIFT         reduce using rule 101
	LSHIFT         reduce using rule 101
	ANDAND         reduce using rule 101
	OROR           reduce using rule 101
	EQ             reduce using rule 101
	NOTEQ          reduce using rule 101
	GT             reduce using rule 101
	LT             reduce using rule 101
	GTE            reduce using rule 101
	LTE            reduce using rule 101
	SEMI           reduce using rule 101
	XOR            reduce using rule 101


State 49

	Args -> LEFTP Type . Name RIGHTP                    (rule 14)
	Args -> LEFTP Type . Name COMMA MoreArgs RIGHTP     (rule 15)

	IDEN           shift, and enter state 15

	Name           goto state 71

State 50

	Args -> LEFTP RIGHTP .                              (rule 13)

	LPAR           reduce using rule 13


State 51

	Function -> Type Name Args Block .                  (rule 12)

	IDEN           reduce using rule 12
	INCLUDE        reduce using rule 12
	%eof           reduce using rule 12


State 52

	Block -> LPAR . Internal RPAR                       (rule 18)
	Block -> LPAR . RPAR                                (rule 19)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 64
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	FOR            shift, and enter state 65
	IF             shift, and enter state 66
	WHILE          shift, and enter state 67
	RETURN         shift, and enter state 68
	SEMI           shift, and enter state 69
	LPAR           shift, and enter state 52
	RPAR           shift, and enter state 70

	Variable       goto state 53
	Type           goto state 54
	Name           goto state 24
	Block          goto state 55
	Internal       goto state 56
	CodeLine       goto state 57
	Return         goto state 58
	If             goto state 59
	For            goto state 60
	While          goto state 61
	Term           goto state 62
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 53

	CodeLine -> Variable .                              (rule 26)

	NUMBER         reduce using rule 26
	IDEN           reduce using rule 26
	MINUS          reduce using rule 26
	PLUS           reduce using rule 26
	LEFTP          reduce using rule 26
	PP             reduce using rule 26
	MM             reduce using rule 26
	INV            reduce using rule 26
	NOT            reduce using rule 26
	TRUE           reduce using rule 26
	FALSE          reduce using rule 26
	FOR            reduce using rule 26
	IF             reduce using rule 26
	WHILE          reduce using rule 26
	RETURN         reduce using rule 26
	SEMI           reduce using rule 26
	LPAR           reduce using rule 26
	RPAR           reduce using rule 26


State 54

	Variable -> Type . Name SEMI                        (rule 8)
	Variable -> Type . Name AS Assig SEMI               (rule 9)

	IDEN           shift, and enter state 15

	Name           goto state 147

State 55

	CodeLine -> Block .                                 (rule 27)

	NUMBER         reduce using rule 27
	IDEN           reduce using rule 27
	MINUS          reduce using rule 27
	PLUS           reduce using rule 27
	LEFTP          reduce using rule 27
	PP             reduce using rule 27
	MM             reduce using rule 27
	INV            reduce using rule 27
	NOT            reduce using rule 27
	TRUE           reduce using rule 27
	FALSE          reduce using rule 27
	FOR            reduce using rule 27
	IF             reduce using rule 27
	WHILE          reduce using rule 27
	RETURN         reduce using rule 27
	SEMI           reduce using rule 27
	LPAR           reduce using rule 27
	RPAR           reduce using rule 27


State 56

	Block -> LPAR Internal . RPAR                       (rule 18)

	RPAR           shift, and enter state 146


State 57

	Internal -> CodeLine .                              (rule 20)
	Internal -> CodeLine . Internal                     (rule 21)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 64
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	FOR            shift, and enter state 65
	IF             shift, and enter state 66
	WHILE          shift, and enter state 67
	RETURN         shift, and enter state 68
	SEMI           shift, and enter state 69
	LPAR           shift, and enter state 52
	RPAR           reduce using rule 20

	Variable       goto state 53
	Type           goto state 54
	Name           goto state 24
	Block          goto state 55
	Internal       goto state 145
	CodeLine       goto state 57
	Return         goto state 58
	If             goto state 59
	For            goto state 60
	While          goto state 61
	Term           goto state 62
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 58

	CodeLine -> Return .                                (rule 28)

	NUMBER         reduce using rule 28
	IDEN           reduce using rule 28
	MINUS          reduce using rule 28
	PLUS           reduce using rule 28
	LEFTP          reduce using rule 28
	PP             reduce using rule 28
	MM             reduce using rule 28
	INV            reduce using rule 28
	NOT            reduce using rule 28
	TRUE           reduce using rule 28
	FALSE          reduce using rule 28
	FOR            reduce using rule 28
	IF             reduce using rule 28
	WHILE          reduce using rule 28
	RETURN         reduce using rule 28
	SEMI           reduce using rule 28
	LPAR           reduce using rule 28
	RPAR           reduce using rule 28


State 59

	CodeLine -> If .                                    (rule 25)

	NUMBER         reduce using rule 25
	IDEN           reduce using rule 25
	MINUS          reduce using rule 25
	PLUS           reduce using rule 25
	LEFTP          reduce using rule 25
	PP             reduce using rule 25
	MM             reduce using rule 25
	INV            reduce using rule 25
	NOT            reduce using rule 25
	TRUE           reduce using rule 25
	FALSE          reduce using rule 25
	FOR            reduce using rule 25
	IF             reduce using rule 25
	WHILE          reduce using rule 25
	RETURN         reduce using rule 25
	SEMI           reduce using rule 25
	LPAR           reduce using rule 25
	RPAR           reduce using rule 25


State 60

	CodeLine -> For .                                   (rule 23)

	NUMBER         reduce using rule 23
	IDEN           reduce using rule 23
	MINUS          reduce using rule 23
	PLUS           reduce using rule 23
	LEFTP          reduce using rule 23
	PP             reduce using rule 23
	MM             reduce using rule 23
	INV            reduce using rule 23
	NOT            reduce using rule 23
	TRUE           reduce using rule 23
	FALSE          reduce using rule 23
	FOR            reduce using rule 23
	IF             reduce using rule 23
	WHILE          reduce using rule 23
	RETURN         reduce using rule 23
	SEMI           reduce using rule 23
	LPAR           reduce using rule 23
	RPAR           reduce using rule 23


State 61

	CodeLine -> While .                                 (rule 24)

	NUMBER         reduce using rule 24
	IDEN           reduce using rule 24
	MINUS          reduce using rule 24
	PLUS           reduce using rule 24
	LEFTP          reduce using rule 24
	PP             reduce using rule 24
	MM             reduce using rule 24
	INV            reduce using rule 24
	NOT            reduce using rule 24
	TRUE           reduce using rule 24
	FALSE          reduce using rule 24
	FOR            reduce using rule 24
	IF             reduce using rule 24
	WHILE          reduce using rule 24
	RETURN         reduce using rule 24
	SEMI           reduce using rule 24
	LPAR           reduce using rule 24
	RPAR           reduce using rule 24


State 62

	CodeLine -> Term .                                  (rule 22)

	NUMBER         reduce using rule 22
	IDEN           reduce using rule 22
	MINUS          reduce using rule 22
	PLUS           reduce using rule 22
	LEFTP          reduce using rule 22
	PP             reduce using rule 22
	MM             reduce using rule 22
	INV            reduce using rule 22
	NOT            reduce using rule 22
	TRUE           reduce using rule 22
	FALSE          reduce using rule 22
	FOR            reduce using rule 22
	IF             reduce using rule 22
	WHILE          reduce using rule 22
	RETURN         reduce using rule 22
	SEMI           reduce using rule 22
	LPAR           reduce using rule 22
	RPAR           reduce using rule 22


State 63

	Term -> Assig . SEMI                                (rule 40)

	SEMI           shift, and enter state 144


State 64

	Type -> IDEN .                                      (rule 10)
	Name -> IDEN .                                      (rule 11)

	NUMBER         reduce using rule 10
	IDEN           reduce using rule 10
	MINUS          reduce using rule 11
			(reduce using rule 10)

	PLUS           reduce using rule 11
			(reduce using rule 10)

	LEFTP          reduce using rule 10
	MUL            reduce using rule 11
	DIV            reduce using rule 11
	EUCDIV         reduce using rule 11
	PLUSEQ         reduce using rule 11
	SUBEQ          reduce using rule 11
	MULEQ          reduce using rule 11
	DIVEQ          reduce using rule 11
	EUCDIVEQ       reduce using rule 11
	RSHIFTEQ       reduce using rule 11
	LSHIFTEQ       reduce using rule 11
	ANDEQ          reduce using rule 11
	OREQ           reduce using rule 11
	XOREQ          reduce using rule 11
	PP             reduce using rule 11
			(reduce using rule 10)

	MM             reduce using rule 11
			(reduce using rule 10)

	INV            reduce using rule 10
	OR             reduce using rule 11
	AND            reduce using rule 11
	RSHIFT         reduce using rule 11
	LSHIFT         reduce using rule 11
	NOT            reduce using rule 10
	ANDAND         reduce using rule 11
	OROR           reduce using rule 11
	EQ             reduce using rule 11
	NOTEQ          reduce using rule 11
	GT             reduce using rule 11
	LT             reduce using rule 11
	GTE            reduce using rule 11
	LTE            reduce using rule 11
	TRUE           reduce using rule 10
	FALSE          reduce using rule 10
	SEMI           reduce using rule 11
			(reduce using rule 10)

	AS             reduce using rule 11
	COLON          reduce using rule 11
	XOR            reduce using rule 11


State 65

	For -> FOR . LEFTP Type Term Term RIGHTP Block      (rule 32)
	For -> FOR . LEFTP Type Term Term Assig RIGHTP Block    (rule 33)
	For -> FOR . LEFTP Term Term RIGHTP Block           (rule 34)
	For -> FOR . LEFTP Term Term Assig RIGHTP Block     (rule 35)
	For -> FOR . LEFTP Name COLON Name RIGHTP Block     (rule 36)
	For -> FOR . LEFTP Type Name COLON Name RIGHTP Block    (rule 37)

	LEFTP          shift, and enter state 143


State 66

	If -> IF . LEFTP Assig RIGHTP Block                 (rule 30)
	If -> IF . LEFTP Assig RIGHTP Block ELSE Block      (rule 31)

	LEFTP          shift, and enter state 142


State 67

	While -> WHILE . LEFTP Assig RIGHTP Block           (rule 38)

	LEFTP          shift, and enter state 141


State 68

	Return -> RETURN . Term                             (rule 29)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	SEMI           shift, and enter state 69

	Name           goto state 24
	Term           goto state 140
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 69

	Term -> SEMI .                                      (rule 39)

	NUMBER         reduce using rule 39
	IDEN           reduce using rule 39
	MINUS          reduce using rule 39
	PLUS           reduce using rule 39
	LEFTP          reduce using rule 39
	RIGHTP         reduce using rule 39
	PP             reduce using rule 39
	MM             reduce using rule 39
	INV            reduce using rule 39
	NOT            reduce using rule 39
	TRUE           reduce using rule 39
	FALSE          reduce using rule 39
	FOR            reduce using rule 39
	IF             reduce using rule 39
	WHILE          reduce using rule 39
	RETURN         reduce using rule 39
	SEMI           reduce using rule 39
	LPAR           reduce using rule 39
	RPAR           reduce using rule 39


State 70

	Block -> LPAR RPAR .                                (rule 19)

	NUMBER         reduce using rule 19
	IDEN           reduce using rule 19
	MINUS          reduce using rule 19
	PLUS           reduce using rule 19
	LEFTP          reduce using rule 19
	PP             reduce using rule 19
	MM             reduce using rule 19
	INV            reduce using rule 19
	NOT            reduce using rule 19
	TRUE           reduce using rule 19
	FALSE          reduce using rule 19
	FOR            reduce using rule 19
	IF             reduce using rule 19
	WHILE          reduce using rule 19
	ELSE           reduce using rule 19
	RETURN         reduce using rule 19
	SEMI           reduce using rule 19
	INCLUDE        reduce using rule 19
	LPAR           reduce using rule 19
	RPAR           reduce using rule 19
	%eof           reduce using rule 19


State 71

	Args -> LEFTP Type Name . RIGHTP                    (rule 14)
	Args -> LEFTP Type Name . COMMA MoreArgs RIGHTP     (rule 15)

	RIGHTP         shift, and enter state 138
	COMMA          shift, and enter state 139


State 72

	Atom -> Name .                                      (rule 96)
	AtomExt -> Name .                                   (rule 99)

	MINUS          reduce using rule 99
	PLUS           reduce using rule 99
	MUL            reduce using rule 99
	RIGHTP         reduce using rule 99
	DIV            reduce using rule 99
	EUCDIV         reduce using rule 99
	PP             reduce using rule 96
	MM             reduce using rule 96
	OR             reduce using rule 99
	AND            reduce using rule 99
	RSHIFT         reduce using rule 99
	LSHIFT         reduce using rule 99
	ANDAND         reduce using rule 99
	OROR           reduce using rule 99
	EQ             reduce using rule 99
	NOTEQ          reduce using rule 99
	GT             reduce using rule 99
	LT             reduce using rule 99
	GTE            reduce using rule 99
	LTE            reduce using rule 99
	SEMI           reduce using rule 99
	XOR            reduce using rule 99


State 73

	Expr3 -> NOT Expr3 .                                (rule 91)

	MINUS          reduce using rule 91
	PLUS           reduce using rule 91
	MUL            reduce using rule 91
	RIGHTP         reduce using rule 91
	DIV            reduce using rule 91
	EUCDIV         reduce using rule 91
	OR             reduce using rule 91
	AND            reduce using rule 91
	RSHIFT         reduce using rule 91
	LSHIFT         reduce using rule 91
	ANDAND         reduce using rule 91
	OROR           reduce using rule 91
	EQ             reduce using rule 91
	NOTEQ          reduce using rule 91
	GT             reduce using rule 91
	LT             reduce using rule 91
	GTE            reduce using rule 91
	LTE            reduce using rule 91
	SEMI           reduce using rule 91
	XOR            reduce using rule 91


State 74

	Expr3 -> INV Expr3 .                                (rule 92)

	MINUS          reduce using rule 92
	PLUS           reduce using rule 92
	MUL            reduce using rule 92
	RIGHTP         reduce using rule 92
	DIV            reduce using rule 92
	EUCDIV         reduce using rule 92
	OR             reduce using rule 92
	AND            reduce using rule 92
	RSHIFT         reduce using rule 92
	LSHIFT         reduce using rule 92
	ANDAND         reduce using rule 92
	OROR           reduce using rule 92
	EQ             reduce using rule 92
	NOTEQ          reduce using rule 92
	GT             reduce using rule 92
	LT             reduce using rule 92
	GTE            reduce using rule 92
	LTE            reduce using rule 92
	SEMI           reduce using rule 92
	XOR            reduce using rule 92


State 75

	Atom -> Name .                                      (rule 96)

	MINUS          reduce using rule 96
	PLUS           reduce using rule 96
	MUL            reduce using rule 96
	RIGHTP         reduce using rule 96
	DIV            reduce using rule 96
	EUCDIV         reduce using rule 96
	OR             reduce using rule 96
	AND            reduce using rule 96
	RSHIFT         reduce using rule 96
	LSHIFT         reduce using rule 96
	ANDAND         reduce using rule 96
	OROR           reduce using rule 96
	EQ             reduce using rule 96
	NOTEQ          reduce using rule 96
	GT             reduce using rule 96
	LT             reduce using rule 96
	GTE            reduce using rule 96
	LTE            reduce using rule 96
	SEMI           reduce using rule 96
	XOR            reduce using rule 96


State 76

	Expr3 -> MM Atom .                                  (rule 88)

	MINUS          reduce using rule 88
	PLUS           reduce using rule 88
	MUL            reduce using rule 88
	RIGHTP         reduce using rule 88
	DIV            reduce using rule 88
	EUCDIV         reduce using rule 88
	OR             reduce using rule 88
	AND            reduce using rule 88
	RSHIFT         reduce using rule 88
	LSHIFT         reduce using rule 88
	ANDAND         reduce using rule 88
	OROR           reduce using rule 88
	EQ             reduce using rule 88
	NOTEQ          reduce using rule 88
	GT             reduce using rule 88
	LT             reduce using rule 88
	GTE            reduce using rule 88
	LTE            reduce using rule 88
	SEMI           reduce using rule 88
	XOR            reduce using rule 88


State 77

	Atom -> LEFTP . Name AssigOp Assig RIGHTP           (rule 97)
	Atom -> LEFTP . Atom RIGHTP                         (rule 98)

	IDEN           shift, and enter state 15
	LEFTP          shift, and enter state 77

	Name           goto state 136
	Atom           goto state 137

State 78

	Expr3 -> PP Atom .                                  (rule 87)

	MINUS          reduce using rule 87
	PLUS           reduce using rule 87
	MUL            reduce using rule 87
	RIGHTP         reduce using rule 87
	DIV            reduce using rule 87
	EUCDIV         reduce using rule 87
	OR             reduce using rule 87
	AND            reduce using rule 87
	RSHIFT         reduce using rule 87
	LSHIFT         reduce using rule 87
	ANDAND         reduce using rule 87
	OROR           reduce using rule 87
	EQ             reduce using rule 87
	NOTEQ          reduce using rule 87
	GT             reduce using rule 87
	LT             reduce using rule 87
	GTE            reduce using rule 87
	LTE            reduce using rule 87
	SEMI           reduce using rule 87
	XOR            reduce using rule 87


State 79

	Assig -> Name . AssigOp Assig                       (rule 41)
	Atom -> Name .                                      (rule 96)
	Atom -> LEFTP Name . AssigOp Assig RIGHTP           (rule 97)
	AtomExt -> Name .                                   (rule 99)

	MINUS          reduce using rule 99
	PLUS           reduce using rule 99
	MUL            reduce using rule 99
	RIGHTP         reduce using rule 99
			(reduce using rule 96)

	DIV            reduce using rule 99
	EUCDIV         reduce using rule 99
	PLUSEQ         shift, and enter state 111
	SUBEQ          shift, and enter state 112
	MULEQ          shift, and enter state 113
	DIVEQ          shift, and enter state 114
	EUCDIVEQ       shift, and enter state 115
	RSHIFTEQ       shift, and enter state 116
	LSHIFTEQ       shift, and enter state 117
	ANDEQ          shift, and enter state 118
	OREQ           shift, and enter state 119
	XOREQ          shift, and enter state 120
	PP             reduce using rule 96
	MM             reduce using rule 96
	OR             reduce using rule 99
	AND            reduce using rule 99
	RSHIFT         reduce using rule 99
	LSHIFT         reduce using rule 99
	ANDAND         reduce using rule 99
	OROR           reduce using rule 99
	EQ             reduce using rule 99
	NOTEQ          reduce using rule 99
	GT             reduce using rule 99
	LT             reduce using rule 99
	GTE            reduce using rule 99
	LTE            reduce using rule 99
	AS             shift, and enter state 121
	XOR            reduce using rule 99

	AssigOp        goto state 135

State 80

	AtomExt -> LEFTP Assig . RIGHTP                     (rule 103)

	RIGHTP         shift, and enter state 134


State 81

	Expr3 -> Atom . PP                                  (rule 93)
	Expr3 -> Atom . MM                                  (rule 94)
	Atom -> LEFTP Atom . RIGHTP                         (rule 98)

	RIGHTP         shift, and enter state 133
	PP             shift, and enter state 84
	MM             shift, and enter state 85


State 82

	Expr3 -> PLUS Expr3 .                               (rule 89)

	MINUS          reduce using rule 89
	PLUS           reduce using rule 89
	MUL            reduce using rule 89
	RIGHTP         reduce using rule 89
	DIV            reduce using rule 89
	EUCDIV         reduce using rule 89
	OR             reduce using rule 89
	AND            reduce using rule 89
	RSHIFT         reduce using rule 89
	LSHIFT         reduce using rule 89
	ANDAND         reduce using rule 89
	OROR           reduce using rule 89
	EQ             reduce using rule 89
	NOTEQ          reduce using rule 89
	GT             reduce using rule 89
	LT             reduce using rule 89
	GTE            reduce using rule 89
	LTE            reduce using rule 89
	SEMI           reduce using rule 89
	XOR            reduce using rule 89


State 83

	Expr3 -> MINUS Expr3 .                              (rule 90)

	MINUS          reduce using rule 90
	PLUS           reduce using rule 90
	MUL            reduce using rule 90
	RIGHTP         reduce using rule 90
	DIV            reduce using rule 90
	EUCDIV         reduce using rule 90
	OR             reduce using rule 90
	AND            reduce using rule 90
	RSHIFT         reduce using rule 90
	LSHIFT         reduce using rule 90
	ANDAND         reduce using rule 90
	OROR           reduce using rule 90
	EQ             reduce using rule 90
	NOTEQ          reduce using rule 90
	GT             reduce using rule 90
	LT             reduce using rule 90
	GTE            reduce using rule 90
	LTE            reduce using rule 90
	SEMI           reduce using rule 90
	XOR            reduce using rule 90


State 84

	Expr3 -> Atom PP .                                  (rule 93)

	MINUS          reduce using rule 93
	PLUS           reduce using rule 93
	MUL            reduce using rule 93
	RIGHTP         reduce using rule 93
	DIV            reduce using rule 93
	EUCDIV         reduce using rule 93
	OR             reduce using rule 93
	AND            reduce using rule 93
	RSHIFT         reduce using rule 93
	LSHIFT         reduce using rule 93
	ANDAND         reduce using rule 93
	OROR           reduce using rule 93
	EQ             reduce using rule 93
	NOTEQ          reduce using rule 93
	GT             reduce using rule 93
	LT             reduce using rule 93
	GTE            reduce using rule 93
	LTE            reduce using rule 93
	SEMI           reduce using rule 93
	XOR            reduce using rule 93


State 85

	Expr3 -> Atom MM .                                  (rule 94)

	MINUS          reduce using rule 94
	PLUS           reduce using rule 94
	MUL            reduce using rule 94
	RIGHTP         reduce using rule 94
	DIV            reduce using rule 94
	EUCDIV         reduce using rule 94
	OR             reduce using rule 94
	AND            reduce using rule 94
	RSHIFT         reduce using rule 94
	LSHIFT         reduce using rule 94
	ANDAND         reduce using rule 94
	OROR           reduce using rule 94
	EQ             reduce using rule 94
	NOTEQ          reduce using rule 94
	GT             reduce using rule 94
	LT             reduce using rule 94
	GTE            reduce using rule 94
	LTE            reduce using rule 94
	SEMI           reduce using rule 94
	XOR            reduce using rule 94


State 86

	Expr5 -> Expr3 Op5 . Expr5                          (rule 82)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr5          goto state 132
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 87

	Op5 -> MUL .                                        (rule 84)

	NUMBER         reduce using rule 84
	IDEN           reduce using rule 84
	MINUS          reduce using rule 84
	PLUS           reduce using rule 84
	LEFTP          reduce using rule 84
	PP             reduce using rule 84
	MM             reduce using rule 84
	INV            reduce using rule 84
	NOT            reduce using rule 84
	TRUE           reduce using rule 84
	FALSE          reduce using rule 84


State 88

	Op5 -> DIV .                                        (rule 85)

	NUMBER         reduce using rule 85
	IDEN           reduce using rule 85
	MINUS          reduce using rule 85
	PLUS           reduce using rule 85
	LEFTP          reduce using rule 85
	PP             reduce using rule 85
	MM             reduce using rule 85
	INV            reduce using rule 85
	NOT            reduce using rule 85
	TRUE           reduce using rule 85
	FALSE          reduce using rule 85


State 89

	Op5 -> EUCDIV .                                     (rule 86)

	NUMBER         reduce using rule 86
	IDEN           reduce using rule 86
	MINUS          reduce using rule 86
	PLUS           reduce using rule 86
	LEFTP          reduce using rule 86
	PP             reduce using rule 86
	MM             reduce using rule 86
	INV            reduce using rule 86
	NOT            reduce using rule 86
	TRUE           reduce using rule 86
	FALSE          reduce using rule 86


State 90

	Expr6 -> Expr5 Op6 . Expr6                          (rule 78)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr6          goto state 131
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 91

	Op6 -> MINUS .                                      (rule 81)

	NUMBER         reduce using rule 81
	IDEN           reduce using rule 81
	MINUS          reduce using rule 81
	PLUS           reduce using rule 81
	LEFTP          reduce using rule 81
	PP             reduce using rule 81
	MM             reduce using rule 81
	INV            reduce using rule 81
	NOT            reduce using rule 81
	TRUE           reduce using rule 81
	FALSE          reduce using rule 81


State 92

	Op6 -> PLUS .                                       (rule 80)

	NUMBER         reduce using rule 80
	IDEN           reduce using rule 80
	MINUS          reduce using rule 80
	PLUS           reduce using rule 80
	LEFTP          reduce using rule 80
	PP             reduce using rule 80
	MM             reduce using rule 80
	INV            reduce using rule 80
	NOT            reduce using rule 80
	TRUE           reduce using rule 80
	FALSE          reduce using rule 80


State 93

	Expr7 -> Expr6 Op7 . Expr7                          (rule 74)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr7          goto state 130
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 94

	Op7 -> RSHIFT .                                     (rule 76)

	NUMBER         reduce using rule 76
	IDEN           reduce using rule 76
	MINUS          reduce using rule 76
	PLUS           reduce using rule 76
	LEFTP          reduce using rule 76
	PP             reduce using rule 76
	MM             reduce using rule 76
	INV            reduce using rule 76
	NOT            reduce using rule 76
	TRUE           reduce using rule 76
	FALSE          reduce using rule 76


State 95

	Op7 -> LSHIFT .                                     (rule 77)

	NUMBER         reduce using rule 77
	IDEN           reduce using rule 77
	MINUS          reduce using rule 77
	PLUS           reduce using rule 77
	LEFTP          reduce using rule 77
	PP             reduce using rule 77
	MM             reduce using rule 77
	INV            reduce using rule 77
	NOT            reduce using rule 77
	TRUE           reduce using rule 77
	FALSE          reduce using rule 77


State 96

	Expr8 -> Expr7 Op8 . Expr8                          (rule 68)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr8          goto state 129
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 97

	Op8 -> GT .                                         (rule 71)

	NUMBER         reduce using rule 71
	IDEN           reduce using rule 71
	MINUS          reduce using rule 71
	PLUS           reduce using rule 71
	LEFTP          reduce using rule 71
	PP             reduce using rule 71
	MM             reduce using rule 71
	INV            reduce using rule 71
	NOT            reduce using rule 71
	TRUE           reduce using rule 71
	FALSE          reduce using rule 71


State 98

	Op8 -> LT .                                         (rule 70)

	NUMBER         reduce using rule 70
	IDEN           reduce using rule 70
	MINUS          reduce using rule 70
	PLUS           reduce using rule 70
	LEFTP          reduce using rule 70
	PP             reduce using rule 70
	MM             reduce using rule 70
	INV            reduce using rule 70
	NOT            reduce using rule 70
	TRUE           reduce using rule 70
	FALSE          reduce using rule 70


State 99

	Op8 -> GTE .                                        (rule 73)

	NUMBER         reduce using rule 73
	IDEN           reduce using rule 73
	MINUS          reduce using rule 73
	PLUS           reduce using rule 73
	LEFTP          reduce using rule 73
	PP             reduce using rule 73
	MM             reduce using rule 73
	INV            reduce using rule 73
	NOT            reduce using rule 73
	TRUE           reduce using rule 73
	FALSE          reduce using rule 73


State 100

	Op8 -> LTE .                                        (rule 72)

	NUMBER         reduce using rule 72
	IDEN           reduce using rule 72
	MINUS          reduce using rule 72
	PLUS           reduce using rule 72
	LEFTP          reduce using rule 72
	PP             reduce using rule 72
	MM             reduce using rule 72
	INV            reduce using rule 72
	NOT            reduce using rule 72
	TRUE           reduce using rule 72
	FALSE          reduce using rule 72


State 101

	Expr9 -> Expr8 Op9 . Expr9                          (rule 64)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr9          goto state 128
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 102

	Op9 -> EQ .                                         (rule 66)

	NUMBER         reduce using rule 66
	IDEN           reduce using rule 66
	MINUS          reduce using rule 66
	PLUS           reduce using rule 66
	LEFTP          reduce using rule 66
	PP             reduce using rule 66
	MM             reduce using rule 66
	INV            reduce using rule 66
	NOT            reduce using rule 66
	TRUE           reduce using rule 66
	FALSE          reduce using rule 66


State 103

	Op9 -> NOTEQ .                                      (rule 67)

	NUMBER         reduce using rule 67
	IDEN           reduce using rule 67
	MINUS          reduce using rule 67
	PLUS           reduce using rule 67
	LEFTP          reduce using rule 67
	PP             reduce using rule 67
	MM             reduce using rule 67
	INV            reduce using rule 67
	NOT            reduce using rule 67
	TRUE           reduce using rule 67
	FALSE          reduce using rule 67


State 104

	Expr10 -> Expr9 AND . Expr10                        (rule 62)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr10         goto state 127
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 105

	Expr11 -> Expr10 XOR . Expr11                       (rule 60)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr11         goto state 126
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 106

	Expr12 -> Expr11 OR . Expr12                        (rule 58)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr12         goto state 125
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 107

	Expr13 -> Expr12 ANDAND . Expr13                    (rule 56)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr13         goto state 124
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 108

	Expr14 -> Expr13 OROR . Expr14                      (rule 54)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 72
	Expr14         goto state 123
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 109

	Variable -> Type Name AS Assig SEMI .               (rule 9)

	NUMBER         reduce using rule 9
	IDEN           reduce using rule 9
	MINUS          reduce using rule 9
	PLUS           reduce using rule 9
	LEFTP          reduce using rule 9
	PP             reduce using rule 9
	MM             reduce using rule 9
	INV            reduce using rule 9
	NOT            reduce using rule 9
	TRUE           reduce using rule 9
	FALSE          reduce using rule 9
	FOR            reduce using rule 9
	IF             reduce using rule 9
	WHILE          reduce using rule 9
	RETURN         reduce using rule 9
	SEMI           reduce using rule 9
	INCLUDE        reduce using rule 9
	LPAR           reduce using rule 9
	RPAR           reduce using rule 9
	%eof           reduce using rule 9


State 110

	Assig -> Name AssigOp . Assig                       (rule 41)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 122
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 111

	AssigOp -> PLUSEQ .                                 (rule 43)

	NUMBER         reduce using rule 43
	IDEN           reduce using rule 43
	MINUS          reduce using rule 43
	PLUS           reduce using rule 43
	LEFTP          reduce using rule 43
	PP             reduce using rule 43
	MM             reduce using rule 43
	INV            reduce using rule 43
	NOT            reduce using rule 43
	TRUE           reduce using rule 43
	FALSE          reduce using rule 43


State 112

	AssigOp -> SUBEQ .                                  (rule 44)

	NUMBER         reduce using rule 44
	IDEN           reduce using rule 44
	MINUS          reduce using rule 44
	PLUS           reduce using rule 44
	LEFTP          reduce using rule 44
	PP             reduce using rule 44
	MM             reduce using rule 44
	INV            reduce using rule 44
	NOT            reduce using rule 44
	TRUE           reduce using rule 44
	FALSE          reduce using rule 44


State 113

	AssigOp -> MULEQ .                                  (rule 45)

	NUMBER         reduce using rule 45
	IDEN           reduce using rule 45
	MINUS          reduce using rule 45
	PLUS           reduce using rule 45
	LEFTP          reduce using rule 45
	PP             reduce using rule 45
	MM             reduce using rule 45
	INV            reduce using rule 45
	NOT            reduce using rule 45
	TRUE           reduce using rule 45
	FALSE          reduce using rule 45


State 114

	AssigOp -> DIVEQ .                                  (rule 46)

	NUMBER         reduce using rule 46
	IDEN           reduce using rule 46
	MINUS          reduce using rule 46
	PLUS           reduce using rule 46
	LEFTP          reduce using rule 46
	PP             reduce using rule 46
	MM             reduce using rule 46
	INV            reduce using rule 46
	NOT            reduce using rule 46
	TRUE           reduce using rule 46
	FALSE          reduce using rule 46


State 115

	AssigOp -> EUCDIVEQ .                               (rule 47)

	NUMBER         reduce using rule 47
	IDEN           reduce using rule 47
	MINUS          reduce using rule 47
	PLUS           reduce using rule 47
	LEFTP          reduce using rule 47
	PP             reduce using rule 47
	MM             reduce using rule 47
	INV            reduce using rule 47
	NOT            reduce using rule 47
	TRUE           reduce using rule 47
	FALSE          reduce using rule 47


State 116

	AssigOp -> RSHIFTEQ .                               (rule 49)

	NUMBER         reduce using rule 49
	IDEN           reduce using rule 49
	MINUS          reduce using rule 49
	PLUS           reduce using rule 49
	LEFTP          reduce using rule 49
	PP             reduce using rule 49
	MM             reduce using rule 49
	INV            reduce using rule 49
	NOT            reduce using rule 49
	TRUE           reduce using rule 49
	FALSE          reduce using rule 49


State 117

	AssigOp -> LSHIFTEQ .                               (rule 48)

	NUMBER         reduce using rule 48
	IDEN           reduce using rule 48
	MINUS          reduce using rule 48
	PLUS           reduce using rule 48
	LEFTP          reduce using rule 48
	PP             reduce using rule 48
	MM             reduce using rule 48
	INV            reduce using rule 48
	NOT            reduce using rule 48
	TRUE           reduce using rule 48
	FALSE          reduce using rule 48


State 118

	AssigOp -> ANDEQ .                                  (rule 51)

	NUMBER         reduce using rule 51
	IDEN           reduce using rule 51
	MINUS          reduce using rule 51
	PLUS           reduce using rule 51
	LEFTP          reduce using rule 51
	PP             reduce using rule 51
	MM             reduce using rule 51
	INV            reduce using rule 51
	NOT            reduce using rule 51
	TRUE           reduce using rule 51
	FALSE          reduce using rule 51


State 119

	AssigOp -> OREQ .                                   (rule 50)

	NUMBER         reduce using rule 50
	IDEN           reduce using rule 50
	MINUS          reduce using rule 50
	PLUS           reduce using rule 50
	LEFTP          reduce using rule 50
	PP             reduce using rule 50
	MM             reduce using rule 50
	INV            reduce using rule 50
	NOT            reduce using rule 50
	TRUE           reduce using rule 50
	FALSE          reduce using rule 50


State 120

	AssigOp -> XOREQ .                                  (rule 52)

	NUMBER         reduce using rule 52
	IDEN           reduce using rule 52
	MINUS          reduce using rule 52
	PLUS           reduce using rule 52
	LEFTP          reduce using rule 52
	PP             reduce using rule 52
	MM             reduce using rule 52
	INV            reduce using rule 52
	NOT            reduce using rule 52
	TRUE           reduce using rule 52
	FALSE          reduce using rule 52


State 121

	AssigOp -> AS .                                     (rule 53)

	NUMBER         reduce using rule 53
	IDEN           reduce using rule 53
	MINUS          reduce using rule 53
	PLUS           reduce using rule 53
	LEFTP          reduce using rule 53
	PP             reduce using rule 53
	MM             reduce using rule 53
	INV            reduce using rule 53
	NOT            reduce using rule 53
	TRUE           reduce using rule 53
	FALSE          reduce using rule 53


State 122

	Assig -> Name AssigOp Assig .                       (rule 41)

	RIGHTP         reduce using rule 41
	SEMI           reduce using rule 41


State 123

	Expr14 -> Expr13 OROR Expr14 .                      (rule 54)

	RIGHTP         reduce using rule 54
	SEMI           reduce using rule 54


State 124

	Expr13 -> Expr12 ANDAND Expr13 .                    (rule 56)

	RIGHTP         reduce using rule 56
	OROR           reduce using rule 56
	SEMI           reduce using rule 56


State 125

	Expr12 -> Expr11 OR Expr12 .                        (rule 58)

	RIGHTP         reduce using rule 58
	ANDAND         reduce using rule 58
	OROR           reduce using rule 58
	SEMI           reduce using rule 58


State 126

	Expr11 -> Expr10 XOR Expr11 .                       (rule 60)

	RIGHTP         reduce using rule 60
	OR             reduce using rule 60
	ANDAND         reduce using rule 60
	OROR           reduce using rule 60
	SEMI           reduce using rule 60


State 127

	Expr10 -> Expr9 AND Expr10 .                        (rule 62)

	RIGHTP         reduce using rule 62
	OR             reduce using rule 62
	ANDAND         reduce using rule 62
	OROR           reduce using rule 62
	SEMI           reduce using rule 62
	XOR            reduce using rule 62


State 128

	Expr9 -> Expr8 Op9 Expr9 .                          (rule 64)

	RIGHTP         reduce using rule 64
	OR             reduce using rule 64
	AND            reduce using rule 64
	ANDAND         reduce using rule 64
	OROR           reduce using rule 64
	SEMI           reduce using rule 64
	XOR            reduce using rule 64


State 129

	Expr8 -> Expr7 Op8 Expr8 .                          (rule 68)

	RIGHTP         reduce using rule 68
	OR             reduce using rule 68
	AND            reduce using rule 68
	ANDAND         reduce using rule 68
	OROR           reduce using rule 68
	EQ             reduce using rule 68
	NOTEQ          reduce using rule 68
	SEMI           reduce using rule 68
	XOR            reduce using rule 68


State 130

	Expr7 -> Expr6 Op7 Expr7 .                          (rule 74)

	RIGHTP         reduce using rule 74
	OR             reduce using rule 74
	AND            reduce using rule 74
	ANDAND         reduce using rule 74
	OROR           reduce using rule 74
	EQ             reduce using rule 74
	NOTEQ          reduce using rule 74
	GT             reduce using rule 74
	LT             reduce using rule 74
	GTE            reduce using rule 74
	LTE            reduce using rule 74
	SEMI           reduce using rule 74
	XOR            reduce using rule 74


State 131

	Expr6 -> Expr5 Op6 Expr6 .                          (rule 78)

	RIGHTP         reduce using rule 78
	OR             reduce using rule 78
	AND            reduce using rule 78
	RSHIFT         reduce using rule 78
	LSHIFT         reduce using rule 78
	ANDAND         reduce using rule 78
	OROR           reduce using rule 78
	EQ             reduce using rule 78
	NOTEQ          reduce using rule 78
	GT             reduce using rule 78
	LT             reduce using rule 78
	GTE            reduce using rule 78
	LTE            reduce using rule 78
	SEMI           reduce using rule 78
	XOR            reduce using rule 78


State 132

	Expr5 -> Expr3 Op5 Expr5 .                          (rule 82)

	MINUS          reduce using rule 82
	PLUS           reduce using rule 82
	RIGHTP         reduce using rule 82
	OR             reduce using rule 82
	AND            reduce using rule 82
	RSHIFT         reduce using rule 82
	LSHIFT         reduce using rule 82
	ANDAND         reduce using rule 82
	OROR           reduce using rule 82
	EQ             reduce using rule 82
	NOTEQ          reduce using rule 82
	GT             reduce using rule 82
	LT             reduce using rule 82
	GTE            reduce using rule 82
	LTE            reduce using rule 82
	SEMI           reduce using rule 82
	XOR            reduce using rule 82


State 133

	Atom -> LEFTP Atom RIGHTP .                         (rule 98)

	MINUS          reduce using rule 98
	PLUS           reduce using rule 98
	MUL            reduce using rule 98
	RIGHTP         reduce using rule 98
	DIV            reduce using rule 98
	EUCDIV         reduce using rule 98
	PP             reduce using rule 98
	MM             reduce using rule 98
	OR             reduce using rule 98
	AND            reduce using rule 98
	RSHIFT         reduce using rule 98
	LSHIFT         reduce using rule 98
	ANDAND         reduce using rule 98
	OROR           reduce using rule 98
	EQ             reduce using rule 98
	NOTEQ          reduce using rule 98
	GT             reduce using rule 98
	LT             reduce using rule 98
	GTE            reduce using rule 98
	LTE            reduce using rule 98
	SEMI           reduce using rule 98
	XOR            reduce using rule 98


State 134

	AtomExt -> LEFTP Assig RIGHTP .                     (rule 103)

	MINUS          reduce using rule 103
	PLUS           reduce using rule 103
	MUL            reduce using rule 103
	RIGHTP         reduce using rule 103
	DIV            reduce using rule 103
	EUCDIV         reduce using rule 103
	OR             reduce using rule 103
	AND            reduce using rule 103
	RSHIFT         reduce using rule 103
	LSHIFT         reduce using rule 103
	ANDAND         reduce using rule 103
	OROR           reduce using rule 103
	EQ             reduce using rule 103
	NOTEQ          reduce using rule 103
	GT             reduce using rule 103
	LT             reduce using rule 103
	GTE            reduce using rule 103
	LTE            reduce using rule 103
	SEMI           reduce using rule 103
	XOR            reduce using rule 103


State 135

	Assig -> Name AssigOp . Assig                       (rule 41)
	Atom -> LEFTP Name AssigOp . Assig RIGHTP           (rule 97)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 156
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 136

	Atom -> Name .                                      (rule 96)
	Atom -> LEFTP Name . AssigOp Assig RIGHTP           (rule 97)

	RIGHTP         reduce using rule 96
	PLUSEQ         shift, and enter state 111
	SUBEQ          shift, and enter state 112
	MULEQ          shift, and enter state 113
	DIVEQ          shift, and enter state 114
	EUCDIVEQ       shift, and enter state 115
	RSHIFTEQ       shift, and enter state 116
	LSHIFTEQ       shift, and enter state 117
	ANDEQ          shift, and enter state 118
	OREQ           shift, and enter state 119
	XOREQ          shift, and enter state 120
	AS             shift, and enter state 121

	AssigOp        goto state 155

State 137

	Atom -> LEFTP Atom . RIGHTP                         (rule 98)

	RIGHTP         shift, and enter state 133


State 138

	Args -> LEFTP Type Name RIGHTP .                    (rule 14)

	LPAR           reduce using rule 14


State 139

	Args -> LEFTP Type Name COMMA . MoreArgs RIGHTP     (rule 15)

	IDEN           shift, and enter state 7

	Type           goto state 153
	MoreArgs       goto state 154

State 140

	Return -> RETURN Term .                             (rule 29)

	NUMBER         reduce using rule 29
	IDEN           reduce using rule 29
	MINUS          reduce using rule 29
	PLUS           reduce using rule 29
	LEFTP          reduce using rule 29
	PP             reduce using rule 29
	MM             reduce using rule 29
	INV            reduce using rule 29
	NOT            reduce using rule 29
	TRUE           reduce using rule 29
	FALSE          reduce using rule 29
	FOR            reduce using rule 29
	IF             reduce using rule 29
	WHILE          reduce using rule 29
	RETURN         reduce using rule 29
	SEMI           reduce using rule 29
	LPAR           reduce using rule 29
	RPAR           reduce using rule 29


State 141

	While -> WHILE LEFTP . Assig RIGHTP Block           (rule 38)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 152
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 142

	If -> IF LEFTP . Assig RIGHTP Block                 (rule 30)
	If -> IF LEFTP . Assig RIGHTP Block ELSE Block      (rule 31)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 151
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 143

	For -> FOR LEFTP . Type Term Term RIGHTP Block      (rule 32)
	For -> FOR LEFTP . Type Term Term Assig RIGHTP Block    (rule 33)
	For -> FOR LEFTP . Term Term RIGHTP Block           (rule 34)
	For -> FOR LEFTP . Term Term Assig RIGHTP Block     (rule 35)
	For -> FOR LEFTP . Name COLON Name RIGHTP Block     (rule 36)
	For -> FOR LEFTP . Type Name COLON Name RIGHTP Block    (rule 37)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 64
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	SEMI           shift, and enter state 69

	Type           goto state 148
	Name           goto state 149
	Term           goto state 150
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 144

	Term -> Assig SEMI .                                (rule 40)

	NUMBER         reduce using rule 40
	IDEN           reduce using rule 40
	MINUS          reduce using rule 40
	PLUS           reduce using rule 40
	LEFTP          reduce using rule 40
	RIGHTP         reduce using rule 40
	PP             reduce using rule 40
	MM             reduce using rule 40
	INV            reduce using rule 40
	NOT            reduce using rule 40
	TRUE           reduce using rule 40
	FALSE          reduce using rule 40
	FOR            reduce using rule 40
	IF             reduce using rule 40
	WHILE          reduce using rule 40
	RETURN         reduce using rule 40
	SEMI           reduce using rule 40
	LPAR           reduce using rule 40
	RPAR           reduce using rule 40


State 145

	Internal -> CodeLine Internal .                     (rule 21)

	RPAR           reduce using rule 21


State 146

	Block -> LPAR Internal RPAR .                       (rule 18)

	NUMBER         reduce using rule 18
	IDEN           reduce using rule 18
	MINUS          reduce using rule 18
	PLUS           reduce using rule 18
	LEFTP          reduce using rule 18
	PP             reduce using rule 18
	MM             reduce using rule 18
	INV            reduce using rule 18
	NOT            reduce using rule 18
	TRUE           reduce using rule 18
	FALSE          reduce using rule 18
	FOR            reduce using rule 18
	IF             reduce using rule 18
	WHILE          reduce using rule 18
	ELSE           reduce using rule 18
	RETURN         reduce using rule 18
	SEMI           reduce using rule 18
	INCLUDE        reduce using rule 18
	LPAR           reduce using rule 18
	RPAR           reduce using rule 18
	%eof           reduce using rule 18


State 147

	Variable -> Type Name . SEMI                        (rule 8)
	Variable -> Type Name . AS Assig SEMI               (rule 9)

	SEMI           shift, and enter state 18
	AS             shift, and enter state 19


State 148

	For -> FOR LEFTP Type . Term Term RIGHTP Block      (rule 32)
	For -> FOR LEFTP Type . Term Term Assig RIGHTP Block    (rule 33)
	For -> FOR LEFTP Type . Name COLON Name RIGHTP Block    (rule 37)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	SEMI           shift, and enter state 69

	Name           goto state 165
	Term           goto state 166
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 149

	For -> FOR LEFTP Name . COLON Name RIGHTP Block     (rule 36)
	Assig -> Name . AssigOp Assig                       (rule 41)
	Atom -> Name .                                      (rule 96)
	AtomExt -> Name .                                   (rule 99)

	MINUS          reduce using rule 99
	PLUS           reduce using rule 99
	MUL            reduce using rule 99
	DIV            reduce using rule 99
	EUCDIV         reduce using rule 99
	PLUSEQ         shift, and enter state 111
	SUBEQ          shift, and enter state 112
	MULEQ          shift, and enter state 113
	DIVEQ          shift, and enter state 114
	EUCDIVEQ       shift, and enter state 115
	RSHIFTEQ       shift, and enter state 116
	LSHIFTEQ       shift, and enter state 117
	ANDEQ          shift, and enter state 118
	OREQ           shift, and enter state 119
	XOREQ          shift, and enter state 120
	PP             reduce using rule 96
	MM             reduce using rule 96
	OR             reduce using rule 99
	AND            reduce using rule 99
	RSHIFT         reduce using rule 99
	LSHIFT         reduce using rule 99
	ANDAND         reduce using rule 99
	OROR           reduce using rule 99
	EQ             reduce using rule 99
	NOTEQ          reduce using rule 99
	GT             reduce using rule 99
	LT             reduce using rule 99
	GTE            reduce using rule 99
	LTE            reduce using rule 99
	SEMI           reduce using rule 99
	AS             shift, and enter state 121
	COLON          shift, and enter state 164
	XOR            reduce using rule 99

	AssigOp        goto state 110

State 150

	For -> FOR LEFTP Term . Term RIGHTP Block           (rule 34)
	For -> FOR LEFTP Term . Term Assig RIGHTP Block     (rule 35)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	SEMI           shift, and enter state 69

	Name           goto state 24
	Term           goto state 163
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 151

	If -> IF LEFTP Assig . RIGHTP Block                 (rule 30)
	If -> IF LEFTP Assig . RIGHTP Block ELSE Block      (rule 31)

	RIGHTP         shift, and enter state 162


State 152

	While -> WHILE LEFTP Assig . RIGHTP Block           (rule 38)

	RIGHTP         shift, and enter state 161


State 153

	MoreArgs -> Type . Name                             (rule 16)
	MoreArgs -> Type . Name COMMA MoreArgs              (rule 17)

	IDEN           shift, and enter state 15

	Name           goto state 160

State 154

	Args -> LEFTP Type Name COMMA MoreArgs . RIGHTP     (rule 15)

	RIGHTP         shift, and enter state 159


State 155

	Atom -> LEFTP Name AssigOp . Assig RIGHTP           (rule 97)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 158
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 156

	Assig -> Name AssigOp Assig .                       (rule 41)
	Atom -> LEFTP Name AssigOp Assig . RIGHTP           (rule 97)

	RIGHTP         shift, and enter state 157
			(reduce using rule 41)



State 157

	Atom -> LEFTP Name AssigOp Assig RIGHTP .           (rule 97)

	MINUS          reduce using rule 97
	PLUS           reduce using rule 97
	MUL            reduce using rule 97
	RIGHTP         reduce using rule 97
	DIV            reduce using rule 97
	EUCDIV         reduce using rule 97
	PP             reduce using rule 97
	MM             reduce using rule 97
	OR             reduce using rule 97
	AND            reduce using rule 97
	RSHIFT         reduce using rule 97
	LSHIFT         reduce using rule 97
	ANDAND         reduce using rule 97
	OROR           reduce using rule 97
	EQ             reduce using rule 97
	NOTEQ          reduce using rule 97
	GT             reduce using rule 97
	LT             reduce using rule 97
	GTE            reduce using rule 97
	LTE            reduce using rule 97
	SEMI           reduce using rule 97
	XOR            reduce using rule 97


State 158

	Atom -> LEFTP Name AssigOp Assig . RIGHTP           (rule 97)

	RIGHTP         shift, and enter state 157


State 159

	Args -> LEFTP Type Name COMMA MoreArgs RIGHTP .     (rule 15)

	LPAR           reduce using rule 15


State 160

	MoreArgs -> Type Name .                             (rule 16)
	MoreArgs -> Type Name . COMMA MoreArgs              (rule 17)

	RIGHTP         reduce using rule 16
	COMMA          shift, and enter state 174


State 161

	While -> WHILE LEFTP Assig RIGHTP . Block           (rule 38)

	LPAR           shift, and enter state 52

	Block          goto state 173

State 162

	If -> IF LEFTP Assig RIGHTP . Block                 (rule 30)
	If -> IF LEFTP Assig RIGHTP . Block ELSE Block      (rule 31)

	LPAR           shift, and enter state 52

	Block          goto state 172

State 163

	For -> FOR LEFTP Term Term . RIGHTP Block           (rule 34)
	For -> FOR LEFTP Term Term . Assig RIGHTP Block     (rule 35)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	RIGHTP         shift, and enter state 171
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 170
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 164

	For -> FOR LEFTP Name COLON . Name RIGHTP Block     (rule 36)

	IDEN           shift, and enter state 15

	Name           goto state 169

State 165

	For -> FOR LEFTP Type Name . COLON Name RIGHTP Block    (rule 37)
	Assig -> Name . AssigOp Assig                       (rule 41)
	Atom -> Name .                                      (rule 96)
	AtomExt -> Name .                                   (rule 99)

	MINUS          reduce using rule 99
	PLUS           reduce using rule 99
	MUL            reduce using rule 99
	DIV            reduce using rule 99
	EUCDIV         reduce using rule 99
	PLUSEQ         shift, and enter state 111
	SUBEQ          shift, and enter state 112
	MULEQ          shift, and enter state 113
	DIVEQ          shift, and enter state 114
	EUCDIVEQ       shift, and enter state 115
	RSHIFTEQ       shift, and enter state 116
	LSHIFTEQ       shift, and enter state 117
	ANDEQ          shift, and enter state 118
	OREQ           shift, and enter state 119
	XOREQ          shift, and enter state 120
	PP             reduce using rule 96
	MM             reduce using rule 96
	OR             reduce using rule 99
	AND            reduce using rule 99
	RSHIFT         reduce using rule 99
	LSHIFT         reduce using rule 99
	ANDAND         reduce using rule 99
	OROR           reduce using rule 99
	EQ             reduce using rule 99
	NOTEQ          reduce using rule 99
	GT             reduce using rule 99
	LT             reduce using rule 99
	GTE            reduce using rule 99
	LTE            reduce using rule 99
	SEMI           reduce using rule 99
	AS             shift, and enter state 121
	COLON          shift, and enter state 168
	XOR            reduce using rule 99

	AssigOp        goto state 110

State 166

	For -> FOR LEFTP Type Term . Term RIGHTP Block      (rule 32)
	For -> FOR LEFTP Type Term . Term Assig RIGHTP Block    (rule 33)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48
	SEMI           shift, and enter state 69

	Name           goto state 24
	Term           goto state 167
	Assig          goto state 63
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 167

	For -> FOR LEFTP Type Term Term . RIGHTP Block      (rule 32)
	For -> FOR LEFTP Type Term Term . Assig RIGHTP Block    (rule 33)

	NUMBER         shift, and enter state 39
	IDEN           shift, and enter state 15
	MINUS          shift, and enter state 40
	PLUS           shift, and enter state 41
	LEFTP          shift, and enter state 42
	RIGHTP         shift, and enter state 182
	PP             shift, and enter state 43
	MM             shift, and enter state 44
	INV            shift, and enter state 45
	NOT            shift, and enter state 46
	TRUE           shift, and enter state 47
	FALSE          shift, and enter state 48

	Name           goto state 24
	Assig          goto state 181
	Expr14         goto state 26
	Expr13         goto state 27
	Expr12         goto state 28
	Expr11         goto state 29
	Expr10         goto state 30
	Expr9          goto state 31
	Expr8          goto state 32
	Expr7          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr3          goto state 36
	Atom           goto state 37
	AtomExt        goto state 38

State 168

	For -> FOR LEFTP Type Name COLON . Name RIGHTP Block    (rule 37)

	IDEN           shift, and enter state 15

	Name           goto state 180

State 169

	For -> FOR LEFTP Name COLON Name . RIGHTP Block     (rule 36)

	RIGHTP         shift, and enter state 179


State 170

	For -> FOR LEFTP Term Term Assig . RIGHTP Block     (rule 35)

	RIGHTP         shift, and enter state 178


State 171

	For -> FOR LEFTP Term Term RIGHTP . Block           (rule 34)

	LPAR           shift, and enter state 52

	Block          goto state 177

State 172

	If -> IF LEFTP Assig RIGHTP Block .                 (rule 30)
	If -> IF LEFTP Assig RIGHTP Block . ELSE Block      (rule 31)

	NUMBER         reduce using rule 30
	IDEN           reduce using rule 30
	MINUS          reduce using rule 30
	PLUS           reduce using rule 30
	LEFTP          reduce using rule 30
	PP             reduce using rule 30
	MM             reduce using rule 30
	INV            reduce using rule 30
	NOT            reduce using rule 30
	TRUE           reduce using rule 30
	FALSE          reduce using rule 30
	FOR            reduce using rule 30
	IF             reduce using rule 30
	WHILE          reduce using rule 30
	ELSE           shift, and enter state 176
	RETURN         reduce using rule 30
	SEMI           reduce using rule 30
	LPAR           reduce using rule 30
	RPAR           reduce using rule 30


State 173

	While -> WHILE LEFTP Assig RIGHTP Block .           (rule 38)

	NUMBER         reduce using rule 38
	IDEN           reduce using rule 38
	MINUS          reduce using rule 38
	PLUS           reduce using rule 38
	LEFTP          reduce using rule 38
	PP             reduce using rule 38
	MM             reduce using rule 38
	INV            reduce using rule 38
	NOT            reduce using rule 38
	TRUE           reduce using rule 38
	FALSE          reduce using rule 38
	FOR            reduce using rule 38
	IF             reduce using rule 38
	WHILE          reduce using rule 38
	RETURN         reduce using rule 38
	SEMI           reduce using rule 38
	LPAR           reduce using rule 38
	RPAR           reduce using rule 38


State 174

	MoreArgs -> Type Name COMMA . MoreArgs              (rule 17)

	IDEN           shift, and enter state 7

	Type           goto state 153
	MoreArgs       goto state 175

State 175

	MoreArgs -> Type Name COMMA MoreArgs .              (rule 17)

	RIGHTP         reduce using rule 17


State 176

	If -> IF LEFTP Assig RIGHTP Block ELSE . Block      (rule 31)

	LPAR           shift, and enter state 52

	Block          goto state 188

State 177

	For -> FOR LEFTP Term Term RIGHTP Block .           (rule 34)

	NUMBER         reduce using rule 34
	IDEN           reduce using rule 34
	MINUS          reduce using rule 34
	PLUS           reduce using rule 34
	LEFTP          reduce using rule 34
	PP             reduce using rule 34
	MM             reduce using rule 34
	INV            reduce using rule 34
	NOT            reduce using rule 34
	TRUE           reduce using rule 34
	FALSE          reduce using rule 34
	FOR            reduce using rule 34
	IF             reduce using rule 34
	WHILE          reduce using rule 34
	RETURN         reduce using rule 34
	SEMI           reduce using rule 34
	LPAR           reduce using rule 34
	RPAR           reduce using rule 34


State 178

	For -> FOR LEFTP Term Term Assig RIGHTP . Block     (rule 35)

	LPAR           shift, and enter state 52

	Block          goto state 187

State 179

	For -> FOR LEFTP Name COLON Name RIGHTP . Block     (rule 36)

	LPAR           shift, and enter state 52

	Block          goto state 186

State 180

	For -> FOR LEFTP Type Name COLON Name . RIGHTP Block    (rule 37)

	RIGHTP         shift, and enter state 185


State 181

	For -> FOR LEFTP Type Term Term Assig . RIGHTP Block    (rule 33)

	RIGHTP         shift, and enter state 184


State 182

	For -> FOR LEFTP Type Term Term RIGHTP . Block      (rule 32)

	LPAR           shift, and enter state 52

	Block          goto state 183

State 183

	For -> FOR LEFTP Type Term Term RIGHTP Block .      (rule 32)

	NUMBER         reduce using rule 32
	IDEN           reduce using rule 32
	MINUS          reduce using rule 32
	PLUS           reduce using rule 32
	LEFTP          reduce using rule 32
	PP             reduce using rule 32
	MM             reduce using rule 32
	INV            reduce using rule 32
	NOT            reduce using rule 32
	TRUE           reduce using rule 32
	FALSE          reduce using rule 32
	FOR            reduce using rule 32
	IF             reduce using rule 32
	WHILE          reduce using rule 32
	RETURN         reduce using rule 32
	SEMI           reduce using rule 32
	LPAR           reduce using rule 32
	RPAR           reduce using rule 32


State 184

	For -> FOR LEFTP Type Term Term Assig RIGHTP . Block    (rule 33)

	LPAR           shift, and enter state 52

	Block          goto state 190

State 185

	For -> FOR LEFTP Type Name COLON Name RIGHTP . Block    (rule 37)

	LPAR           shift, and enter state 52

	Block          goto state 189

State 186

	For -> FOR LEFTP Name COLON Name RIGHTP Block .     (rule 36)

	NUMBER         reduce using rule 36
	IDEN           reduce using rule 36
	MINUS          reduce using rule 36
	PLUS           reduce using rule 36
	LEFTP          reduce using rule 36
	PP             reduce using rule 36
	MM             reduce using rule 36
	INV            reduce using rule 36
	NOT            reduce using rule 36
	TRUE           reduce using rule 36
	FALSE          reduce using rule 36
	FOR            reduce using rule 36
	IF             reduce using rule 36
	WHILE          reduce using rule 36
	RETURN         reduce using rule 36
	SEMI           reduce using rule 36
	LPAR           reduce using rule 36
	RPAR           reduce using rule 36


State 187

	For -> FOR LEFTP Term Term Assig RIGHTP Block .     (rule 35)

	NUMBER         reduce using rule 35
	IDEN           reduce using rule 35
	MINUS          reduce using rule 35
	PLUS           reduce using rule 35
	LEFTP          reduce using rule 35
	PP             reduce using rule 35
	MM             reduce using rule 35
	INV            reduce using rule 35
	NOT            reduce using rule 35
	TRUE           reduce using rule 35
	FALSE          reduce using rule 35
	FOR            reduce using rule 35
	IF             reduce using rule 35
	WHILE          reduce using rule 35
	RETURN         reduce using rule 35
	SEMI           reduce using rule 35
	LPAR           reduce using rule 35
	RPAR           reduce using rule 35


State 188

	If -> IF LEFTP Assig RIGHTP Block ELSE Block .      (rule 31)

	NUMBER         reduce using rule 31
	IDEN           reduce using rule 31
	MINUS          reduce using rule 31
	PLUS           reduce using rule 31
	LEFTP          reduce using rule 31
	PP             reduce using rule 31
	MM             reduce using rule 31
	INV            reduce using rule 31
	NOT            reduce using rule 31
	TRUE           reduce using rule 31
	FALSE          reduce using rule 31
	FOR            reduce using rule 31
	IF             reduce using rule 31
	WHILE          reduce using rule 31
	RETURN         reduce using rule 31
	SEMI           reduce using rule 31
	LPAR           reduce using rule 31
	RPAR           reduce using rule 31


State 189

	For -> FOR LEFTP Type Name COLON Name RIGHTP Block .    (rule 37)

	NUMBER         reduce using rule 37
	IDEN           reduce using rule 37
	MINUS          reduce using rule 37
	PLUS           reduce using rule 37
	LEFTP          reduce using rule 37
	PP             reduce using rule 37
	MM             reduce using rule 37
	INV            reduce using rule 37
	NOT            reduce using rule 37
	TRUE           reduce using rule 37
	FALSE          reduce using rule 37
	FOR            reduce using rule 37
	IF             reduce using rule 37
	WHILE          reduce using rule 37
	RETURN         reduce using rule 37
	SEMI           reduce using rule 37
	LPAR           reduce using rule 37
	RPAR           reduce using rule 37


State 190

	For -> FOR LEFTP Type Term Term Assig RIGHTP Block .    (rule 33)

	NUMBER         reduce using rule 33
	IDEN           reduce using rule 33
	MINUS          reduce using rule 33
	PLUS           reduce using rule 33
	LEFTP          reduce using rule 33
	PP             reduce using rule 33
	MM             reduce using rule 33
	INV            reduce using rule 33
	NOT            reduce using rule 33
	TRUE           reduce using rule 33
	FALSE          reduce using rule 33
	FOR            reduce using rule 33
	IF             reduce using rule 33
	WHILE          reduce using rule 33
	RETURN         reduce using rule 33
	SEMI           reduce using rule 33
	LPAR           reduce using rule 33
	RPAR           reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 104
Number of terminals: 51
Number of non-terminals: 38
Number of states: 191
